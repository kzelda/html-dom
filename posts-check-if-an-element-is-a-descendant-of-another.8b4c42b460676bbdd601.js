(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{c0km:function(n,e,t){"use strict";t.r(e);var a=t("q1tI"),o=t.n(a),c=t("Ov9x"),r=t("2G++");e.default=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(c.a,{content:"\nAssume that we want to find out if the `child` element is a descendant of the `parent` element.\n\n## 1. Use the contains method\n\n~~~ javascript\nconst isDescendant = parent.contains(child);\n~~~\n\n## 2. Go up from the child until see the parent\n\n~~~ javascript\n// Check if `child` is a descendant of `parent`\nconst isDescendant = function(parent, child) {\n    let node = child.parentNode;\n    while (node) {\n        if (node === parent) {\n            return true;\n        }\n\n        // Traverse up to the parent\n        node = node.parentNode;\n    }\n\n    // Go up until the root but couldn't find the `parent`\n    return false;\n};\n~~~\n"}),o.a.createElement(r.a,{slugs:["detect-clicks-outside-of-an-element","get-the-parent-node-of-an-element"]}))}}}]);
//# sourceMappingURL=posts-check-if-an-element-is-a-descendant-of-another.8b4c42b460676bbdd601.js.map