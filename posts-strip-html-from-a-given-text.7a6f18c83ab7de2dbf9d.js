(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{Uitk:function(e,t,n){"use strict";n.r(t);var r=n("q1tI"),a=n.n(r),o=n("Ov9x"),s=n("2G++");t.default=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(o.a,{content:"\n## 1. Get text content from a fake element (not recommended)\n\n~~~ javascript\nconst stripHtml = function(html) {\n    // Create new element\n    const ele = document.createElement('div');\n\n    // Set its HTML\n    ele.innerHTML = html;\n\n    // Return the text only\n    return ele.textContent || \"\";\n};\n~~~\n\nThis approach isn't recommended because it can cause a security issue if the input `html` consists of special tags, such as \n`<script>`.\n\nHowever, we can prevent the html from being executed by replacing the `div` tag with `textarea`:\n\n~~~ javascript\nconst stripHtml = function(html) {\n    const ele = document.createElement('textarea');\n    ele.innerHTML = html;\n    return ele.textContent || \"\";\n};\n~~~\n\n## 2. Use DOMParser\n\n~~~ javascript\nconst stripHtml = function(html) {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    return doc.body.textContent || \"\";\n};\n~~~\n\n## 3. Use template\n\nThe [`<template>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template) tag holds a HTML content that is not to be rendered immediately.\nHowever, this is not supported on older browser such as IE 11.\n\n~~~ javascript\nconst stripHtml = function(html) {\n  const ele = document.createElement('template');\n  ele.innerHTML = html;\n  return ele.content.textContent || \"\";\n};\n~~~\n"}),a.a.createElement(s.a,{slugs:["create-an-element","get-or-set-the-html-of-an-element","get-the-text-content-of-an-element"]}))}}}]);
//# sourceMappingURL=posts-strip-html-from-a-given-text.7a6f18c83ab7de2dbf9d.js.map