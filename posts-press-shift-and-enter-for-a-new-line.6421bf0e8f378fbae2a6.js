(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{VqAQ:function(e,n,t){"use strict";t.r(n);var a=t("q1tI"),s=t.n(a),r=t("TJpk"),o=t("mcK/"),l=t("Ov9x"),i=t("2G++");n.default=function(){return s.a.createElement(s.a.Fragment,null,s.a.createElement(r.Helmet,null,s.a.createElement("meta",{name:"keywords",content:"addEventListener, keydown event, keyCode, preventDefault, shift enter, shiftKey"})),s.a.createElement(l.a,{content:"\nBy default, pressing `Enter` or `Shift` and `Enter` will generate a new line for a textarea element.\n\nIn some cases such as an inline editable element, or a messaging application, you would like\nto submit the data when user presses `Enter`. The only way to generate a new line is to press `Shift` and `Enter`.\n\nAssume that we have the following textarea element:\n\n~~~ html\n<textarea id=\"message\"></textarea>\n~~~\n\nTo prevent the default behavior of pressing the `Enter` key, we can handle the `keydown` event:\n\n~~~ javascript\nconst ele = document.getElementById('message');\n\nele.addEventListener('keydown', function(e) {\n    // Get the code of pressed key\n    const keyCode = e.which || e.keyCode;\n\n    // 13 represents the Enter key\n    if (keyCode === 13 && !e.shiftKey) {\n        // Don't generate a new line\n        e.preventDefault();\n\n        // Do something else such as send the message to back-end\n        // ...\n    }\n});\n~~~\n\nIn the demo below, pressing `Enter` will do nothing:\n"}),s.a.createElement(o.a,{src:"/demo/press-shift-and-enter-for-a-new-line/index.html"}),s.a.createElement(i.a,{slugs:["attach-or-detach-an-event-handler","prevent-the-default-action-of-an-event"]}))}}}]);
//# sourceMappingURL=posts-press-shift-and-enter-for-a-new-line.6421bf0e8f378fbae2a6.js.map