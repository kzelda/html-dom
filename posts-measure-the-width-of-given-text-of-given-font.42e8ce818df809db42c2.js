(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{"Dr+j":function(e,t,n){"use strict";n.r(t);var a=n("q1tI"),o=n.n(a),s=n("Ov9x"),l=n("2G++");t.default=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(s.a,{content:"\n## 1. Use the canvas' measureText() method\n\n~~~ javascript\nconst measureWidth = function(text, font) {\n    // Create new `canvas` element\n    const canvas = document.createElement('canvas');\n    \n    // Get the context\n    const context = canvas.getContext('2d');\n\n    // Set the font\n    context.font = font;\n\n    // Measure the text\n    const metrics = context.measureText(text);\n\n    // Return the width in pixels\n    return metrics.width;\n};\n~~~\n\n## 2. Use a fake element\n\n~~~ javascript\nconst measureWidth = function(text, font) {\n    // Create an element\n    const ele = document.createElement('div');\n\n    // Set styles\n    ele.style.position = 'absolute';\n    ele.style.visibility = 'hidden';\n    ele.style.whiteSpace = 'nowrap';\n    ele.style.left = '-9999px';\n\n    // Set font and text\n    ele.style.font = font;\n    ele.innerText = text;\n\n    // Append to the body\n    document.body.appendChild(ele);\n\n    // Get the width\n    const width = window.getComputedStyle(ele).width;\n\n    // Remove the element\n    document.body.removeChild(ele);\n\n    return width;\n};\n~~~\n"}),o.a.createElement(l.a,{slugs:["create-an-element","get-css-styles-of-an-element","remove-an-element","resize-the-width-of-a-text-box-to-fit-its-content-automatically","scale-a-text-to-fit-inside-of-an-element","set-css-style-for-an-element"]}))}}}]);
//# sourceMappingURL=posts-measure-the-width-of-given-text-of-given-font.42e8ce818df809db42c2.js.map