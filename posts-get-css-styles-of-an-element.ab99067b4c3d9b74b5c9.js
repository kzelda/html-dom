(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{sPGH:function(e,t,n){"use strict";n.r(t);var a=n("q1tI"),s=n.n(a),o=n("Ov9x"),l=n("2G++");t.default=function(){return s.a.createElement(s.a.Fragment,null,s.a.createElement(o.a,{content:"\nWe can get all CSS styles via the `getComputedStyle` method:\n\n~~~ javascript\nconst styles = window.getComputedStyle(ele, null);\n~~~\n\nFrom there, it's easy to access the value of specific style:\n\n~~~ javascript\n// Get the background color\nconst bgColor = styles.backgroundColor;\n~~~\n\nFor the style that has a vendor prefix which starts with a hyphen (-), we can get the style value by passing the style:\n\n~~~ javascript\nconst textSizeAdjust = styles['-webkit-text-size-adjust'];\n~~~\n\nThe `getPropertyValue` method produces the same result:\n\n~~~ javascript\nconst bgColor = styles.getPropertyValue('background-color');\n\n// Or turn the parameter to camelCase format:\nconst bgColor = styles.getPropertyValue('backgroundColor');\n~~~\n"}),s.a.createElement(l.a,{slugs:["check-if-an-element-is-scrollable","get-the-default-value-of-a-css-property","measure-the-width-of-given-text-of-given-font","resize-columns-of-a-table","resize-the-width-of-a-text-box-to-fit-its-content-automatically","scale-a-text-to-fit-inside-of-an-element","set-css-style-for-an-element"]}))}}}]);
//# sourceMappingURL=posts-get-css-styles-of-an-element.ab99067b4c3d9b74b5c9.js.map