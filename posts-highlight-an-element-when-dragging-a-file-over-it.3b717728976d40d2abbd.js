(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{i3ph:function(e,n,t){"use strict";t.r(n);var a=t("q1tI"),r=t.n(a),l=t("mcK/"),d=t("Ov9x"),s=t("2G++");n.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(d.a,{content:"\nAssume that we have a droppable element as below\n\n~~~ html\n<div id=\"droppable\">\n    ...\n</div>\n~~~\n\nWe will hightlight the element when user drags a file over it. For example, the element will have a dashed border which can be simulated\nby a CSS class:\n\n~~~ css\n.dragging {\n    border: 4px dashed #ccc;\n}\n~~~\n\nThe `dragging` class will be [added](/add-or-remove-class-from-an-element) to the element when user drags file and moves it over the element:\n\n~~~ javascript\n// Query the element\nconst ele = document.getElementById('droppable');\n\nele.addEventListener('dragenter', function(e) {\n    e.preventDefault();\n    e.target.classList.add('dragging');\n});\n~~~\n\nIn similar events, the class is removed from the element when user moves the file out of the element, or drops it:\n\n~~~ javascript\nele.addEventListener('dragover', function(e) {\n    e.preventDefault();\n});\n\nele.addEventListener('dragleave', function(e) {\n    e.preventDefault();\n    e.target.classList.remove('dragging');\n});\n\nele.addEventListener('drop', function(e) {\n    e.preventDefault();\n    e.target.classList.remove('dragging');\n});\n~~~\n\nThe last thing, `e.preventDefault()` is used in the handlers to [prevent](/prevent-the-default-action-of-an-event) the browser from\nexecuting the default action.\n"}),r.a.createElement(l.a,{src:"/demo/highlight-an-element-when-dragging-a-file-over-it/index.html"}),r.a.createElement(s.a,{slugs:["add-or-remove-class-from-an-element","attach-or-detach-an-event-handler","prevent-the-default-action-of-an-event"]}))}}}]);
//# sourceMappingURL=posts-highlight-an-element-when-dragging-a-file-over-it.3b717728976d40d2abbd.js.map