(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"5GKV":function(e,t,n){"use strict";n.r(t);var a=n("q1tI"),o=n.n(a),l=n("Ov9x"),r=n("2G++");t.default=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(l.a,{content:"\nAssume that we want to copy a given text, `text`, to the clipboard.\n\nIn order to do that, we [create](/create-an-element) a fake `textarea` element with value as `text`. Next, we [select](/trigger-an-event) the content and execute the \"Copy\" command. \n\n~~~ javascript\n// Create a fake textarea\nconst textAreaEle = document.createElement('textarea');\n\n// Reset styles\ntextAreaEle.style.border = '0';\ntextAreaEle.style.padding = '0';\ntextAreaEle.style.margin = '0';\n\n// Set the absolute position\n// User won't see the element\ntextAreaEle.style.position = 'absolute';\ntextAreaEle.style.left = '-9999px';\ntextAreaEle.style.top = `".concat(document.documentElement.scrollTop,"px`;\n\n// Set the value\ntextAreaEle.value = text;\n\n// Append the textarea to body\ndocument.body.appendChild(textAreaEle);\n\n// Focus and select the text\ntextAreaEle.focus();\ntextAreaEle.select();\n\n// Execute the \"copy\" command\ntry {\n    document.execCommand('copy');\n} catch (err) {\n    // Unable to copy\n} finally {\n    // Remove the textarea\n    document.body.removeChild(textAreaEle);\n}\n~~~\n")}),o.a.createElement(r.a,{slugs:["append-to-an-element","paste-as-plain-text","remove-an-element"]}))}}}]);
//# sourceMappingURL=posts-copy-text-to-the-clipboard.6389c6d685cf3dac2e2f.js.map