(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{ZzGG:function(e,n,t){"use strict";t.r(n);var a=t("q1tI"),r=t.n(a),o=t("Ov9x"),l=t("2G++");n.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(o.a,{content:"\n## Trigger event for inputs\n\nThere are some special events that are avaialble as the method's element. You can call them directly such as following:\n\n~~~ javascript\n// For text box and textarea\nele.focus();\nele.blur();\n\n// For form element\nformEle.reset();\nformEle.submit();\n\n// For any element\nele.click();\n~~~\n\n## Trigger a native event\n\n~~~ javascript\nconst trigger = (ele, eventName) {\n    const e = document.createEvent('HTMLEvents');\n    e.initEvent(eventName, true, false);\n    ele.dispatchEvent(e);\n};\n~~~\n\nYou can trigger the `change`, `keyup`, `mousedown` and more by calling\n\n~~~ javascript\ntrigger(ele, 'mousedown');\n~~~\n\n## Trigger a custom event\n\nThe sample code below triggers a custom event named `hello` with a data of `{ message: 'Hello World' }`:\n\n~~~ javascript\nconst e = document.createEvent('CustomEvent');\ne.initCustomEvent('hello', true, true, { message: 'Hello World' });\n\n// Trigger the event\nele.dispatchEvent(e);\n~~~\n"}),r.a.createElement(l.a,{slugs:["copy-text-to-the-clipboard","download-a-file","put-cursor-at-the-end-of-an-input","select-the-text-of-a-textarea-automatically"]}))}}}]);
//# sourceMappingURL=posts-trigger-an-event.5c341f1141c6410a7d38.js.map