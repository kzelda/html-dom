(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{DGlB:function(e,t,n){"use strict";n.r(t);var s=n("q1tI"),l=n.n(s),a=n("mcK/"),i=n("Ov9x"),o=n("2G++");t.default=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(i.a,{content:"\nLet's say that an input has the `id` of `textbox` as below:\n\n~~~ html\n<input type=\"text\" id=\"textbox\" />\n~~~\n\nTo adjust its width based on its content dynamically, we create a fake element whose content is the same as the input value.\nAnd we set the input's width as the fake element's width.\n\n~~~ javascript\n// Create a div element\nconst fakeEle = document.createElement('div');\n\n// Hide it completely\nfakeEle.style.position = 'absolute';\nfakeEle.style.top = '0';\nfakeEle.style.left = '-9999px';\nfakeEle.style.overflow = 'hidden';\nfakeEle.style.visibility = 'hidden';\nfakeEle.style.whiteSpace = 'nowrap';\nfakeEle.style.height = '0';\n\n// We copy some styles from the textbox that effect the width\nconst textboxEle = document.getElementById('textbox');\n\n// Get the styles\nconst styles = window.getComputedStyle(textboxEle);\n\n// Copy font styles from the textbox\nfakeEle.style.fontFamily = styles.fontFamily;\nfakeEle.style.fontSize = styles.fontSize;\nfakeEle.style.fontStyle = styles.fontStyle;\nfakeEle.style.fontWeight = styles.fontWeight;\nfakeEle.style.letterSpacing = styles.letterSpacing;\nfakeEle.style.textTransform = styles.textTransform;\n\nfakeEle.style.borderLeftWidth = styles.borderLeftWidth;\nfakeEle.style.borderRightWidth = styles.borderRightWidth;\nfakeEle.style.paddingLeft = styles.paddingLeft;\nfakeEle.style.paddingRight = styles.paddingRight;\n\n// Append the fake element to `body`\ndocument.body.appendChild(fakeEle);\n~~~\n\nThe function below sets the HTML for the fake element, calculates its width and sets the result to the original input.\n\n~~~ javascript\nconst setWidth = function() {\n    const string = textboxEle.value ||\n                   textboxEle.getAttribute('placeholder') || '';\n    fakeEle.innerHTML = string.replace(/s/g, '&' + 'nbsp;');\n    \n    const fakeEleStyles = window.getComputedStyle(fakeEle);\n    textboxEle.style.width = fakeEleStyles.width;\n};\n~~~\n\n> This [post](/measure-the-width-of-given-text-of-given-font) introduces more ways to measure the width of given text in given font\n\nFinally, we invoke the `setWidth` function when users change the input value by listening on the `input` event:\n\n~~~ javascript\nsetWidth();\n    \ntextboxEle.addEventListener('input', function(e) {\n    setWidth();\n});\n~~~\n"}),l.a.createElement(a.a,{src:"/demo/resize-the-width-of-a-text-box-to-fit-its-content-automatically/index.html"}),l.a.createElement(o.a,{slugs:["attach-or-detach-an-event-handler","create-an-element","get-css-styles-of-an-element","measure-the-width-of-given-text-of-given-font","remove-an-element","scale-a-text-to-fit-inside-of-an-element","set-css-style-for-an-element"]}))}}}]);
//# sourceMappingURL=posts-resize-the-width-of-a-text-box-to-fit-its-content-automatically.9e5c57d4b6137ec3a6e1.js.map