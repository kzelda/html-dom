(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{Ctvw:function(e,n,t){"use strict";t.r(n);var o=t("q1tI"),a=t.n(o),s=t("mcK/"),l=t("Ov9x"),m=t("2G++");n.default=function(){return a.a.createElement(a.a.Fragment,null,a.a.createElement(l.a,{content:"\nAssume that we want to turn the following element to draggable element:\n\n~~~ html\n<div id=\"dragMe\" class=\"draggable\">Drag me</div>\n~~~\n\nThe element needs to have the following styles:\n\n~~~ css\n.draggable {\n    /* Indicate the element draggable */\n    cursor: move;\n\n    /* It will be positioned absolutely */\n    position: absolute;\n\n    /* Doesn't allow to select the content inside */\n    user-select: none;\n}\n~~~\n\nIn order to make it draggable, we need to handle three events:\n\n* `mousedown` on the element: Track the current position of mouse\n* `mousemove` on `document`: Calculate how far the mouse has been moved, and determine the position of element\n* `mouseup` on `document`: Remove the event handlers of `document`\n\n~~~ javascript\n// The current position of mouse\nlet x = 0;\nlet y = 0;\n\n// Query the element\nconst ele = document.getElementById('dragMe');\n\n// Handle the mousedown event\n// that's triggered when user drags the element\nconst mouseDownHandler = function(e) {\n    // Get the current mouse position\n    x = e.clientX;\n    y = e.clientY;\n    \n    // Attach the listeners to `document`\n    document.addEventListener('mousemove', mouseMoveHandler);\n    document.addEventListener('mouseup', mouseUpHandler);\n};\n\nconst mouseMoveHandler = function(e) {\n    // How far the mouse has been moved\n    const dx = e.clientX - x;\n    const dy = e.clientY - y;\n\n    // Set the position of element\n    ele.style.top = `${ele.offsetTop + dy}px`; \n    ele.style.left = `${ele.offsetLeft + dx}px`;\n\n    // Reassign the position of mouse\n    x = e.clientX;\n    y = e.clientY;\n};\n\nconst mouseUpHandler = function() {\n    // Remove the handlers of `mousemove` and `mouseup`\n    document.removeEventListener('mousemove', mouseMoveHandler);\n    document.removeEventListener('mouseup', mouseUpHandler);\n};\n\nele.addEventListener('mousedown', mouseDownHandler);\n~~~\n"}),a.a.createElement(s.a,{src:"/demo/make-a-draggable-element/index.html"}),a.a.createElement(m.a,{slugs:["attach-or-detach-an-event-handler","calculate-the-mouse-position-relative-to-an-element","create-resizable-split-views","drag-and-drop-element-in-a-list","drag-and-drop-table-column","drag-and-drop-table-row","make-a-resizable-element","resize-columns-of-a-table","set-css-style-for-an-element","show-a-ghost-element-when-dragging-an-element"]}))}}}]);
//# sourceMappingURL=posts-make-a-draggable-element.330347a9b4cbeebc227e.js.map