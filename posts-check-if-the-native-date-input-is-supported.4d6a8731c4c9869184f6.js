(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{"44eU":function(e,t,n){"use strict";n.r(t);var a=n("q1tI"),u=n.n(a),r=n("Ov9x"),i=n("2G++");t.default=function(){return u.a.createElement(u.a.Fragment,null,u.a.createElement(r.a,{content:"\nThe following function returns `true` if the current browser supports the native date input `<input type=\"date\" />`:\n\n~~~ javascript\nconst isDateInputSupported = function() {\n    // Create new input element\n    const ele = document.createElement('input');\n\n    // Set the type attribute\n    ele.setAttribute('type', 'date');\n\n    const invalidValue = 'not-a-valid-date';\n\n    // Set an invalid value\n    ele.setAttribute('value', invalidValue);\n\n    // If the browser supports the date input,\n    // it won't have effect on the `value` attribute\n    // `ele.value` will be an empty string\n    // \n    // In the other case, the input is treated as normal text input\n    // and `ele.value` returns the original value\n    return ele.value !== invalidValue;\n};\n~~~\n\nThis approach can be used to check other HTML 5 input types such as `email`, `url`, etc.\n"}),u.a.createElement(i.a,{slugs:["create-an-element","get-set-and-remove-attributes"]}))}}}]);
//# sourceMappingURL=posts-check-if-the-native-date-input-is-supported.4d6a8731c4c9869184f6.js.map