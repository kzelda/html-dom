(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{p8px:function(e,t,n){"use strict";n.r(t);var a=n("q1tI"),o=n.n(a),s=n("mcK/"),i=n("Ov9x"),l=n("2G++");t.default=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(i.a,{content:"\nLet's say that we want to scale a text inside a headline:\n\n~~~ html\n<div id=\"headline\">Hello World</div>\n~~~\n\nFirst of all, we need to measure the width of element with its current font size and [text content](/get-the-text-content-of-an-element).\nFor more information, you can take a look at this [post](/measure-the-width-of-given-text-of-given-font).\n\n~~~ javascript\nconst measureWidth = function(text, font) {\n    // Measure the width of given text for given font\n    ...\n};\n\n// Query the element\nconst ele = document.getElementById('headline');\n\n// Get the styles\nconst styles = window.getComputedStyle(ele);\n\n// Get the font size and font style\nconst font = styles.font;\nconst fontSize = parseInt(styles.fontSize);\n\nconst measured = measureWidth(ele.textContent, font);\n~~~\n\nNow we can calculate how much the element is scaled by comparing the measured width and the [full width](/determine-the-height-and-width-of-an-element):\n\n~~~ javascript\nconst scale = ele.clientWidth / parseFloat(measured);\n~~~\n\nFinally, we set the font size as the element scales up to full width:\n\n~~~ javascript\nconst scaleFontSize = Math.floor(scale * fontSize);\nele.style.fontSize = `${scaleFontSize}px`;\n~~~\n"}),o.a.createElement(s.a,{src:"/demo/scale-a-text-to-fit-inside-of-an-element/index.html"}),o.a.createElement(l.a,{slugs:["determine-the-height-and-width-of-an-element","get-css-styles-of-an-element","get-the-text-content-of-an-element","measure-the-width-of-given-text-of-given-font","resize-the-width-of-a-text-box-to-fit-its-content-automatically","set-css-style-for-an-element"]}))}}}]);
//# sourceMappingURL=posts-scale-a-text-to-fit-inside-of-an-element.b3446e862a25a19ad1bd.js.map