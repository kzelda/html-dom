(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{"m/Mk":function(e,n,t){"use strict";t.r(n);var a=t("q1tI"),o=t.n(a),r=t("Ov9x"),l=t("2G++");n.default=function(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(r.a,{content:"\nAssume that `elements` is a NodeList that matches given selector:\n\n~~~ javascript\nconst elements = document.querySelectorAll(...);\n~~~\n\nYou can loop over `elements` by using one of the approach below:\n\n## 1. Use the ES6 spread operator\n\n~~~ javascript\n[...elements].forEach(function(ele) {\n    ...\n});\n~~~\n\n## 2. Use the Array methods\n\n~~~ javascript\n// `Array.from` is not supported on IE\nArray.from(elements).forEach(function(ele) {\n    ...\n});\n\n// Or\n[].forEach.call(elements, function(ele) {\n    ...\n});\n\n// Or\n[].slice.call(elements, 0).forEach(function(ele) {\n    ...\n});\n~~~\n\n## 3. Use the forEach method\n\nIf you don't have to support Internet Explorer, then use the [`forEach`](https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach) method:\n\n~~~ javascript\nelements.forEach(function(ele) {\n    ...\n});\n~~~\n"}),o.a.createElement(l.a,{slugs:["create-resizable-split-views","drag-and-drop-element-in-a-list","drag-and-drop-table-column","drag-and-drop-table-row","export-a-table-to-csv","make-a-resizable-element","replace-broken-images","resize-columns-of-a-table","select-an-element-or-list-of-elements","select-the-children-of-an-element","serialize-form-data-into-a-query-string","sort-a-table-by-clicking-its-headers","upload-files-with-ajax"]}))}}}]);
//# sourceMappingURL=posts-loop-over-a-nodelist.334618f98c90fe799a87.js.map